# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc
# üì¶ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø–∞–ø–∫—É —Å –±–∞–π—Ç-–∫–æ–¥–æ–º Python
__pycache__/        # Python –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç .py ‚Üí .pyc; —ç—Ç–∏ —Ñ–∞–π–ª—ã –Ω–µ –Ω—É–∂–Ω—ã –≤ Git (–∏–Ω–∞—á–µ –±—É–¥—É—Ç –∑–∞—Å–æ—Ä—è—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π)

# üì¶ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –±–∞–π—Ç–∫–æ–¥ –∏ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã Python
*.py[cod]           # –§–∞–π–ª—ã: .pyc, .pyo, .pyd ‚Äî —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ (–∏–Ω–∞—á–µ –±—É–¥–µ—à—å –∫–æ–º–º–∏—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã)
# –ß—Ç–æ —Ç–∞–∫–æ–µ *.py[cod]: - #–≠—Ç–æ —à–∞–±–ª–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –Ω–µ .py, –∞ –≤—Å–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ –æ—Ç .py:
           #*.pyc ‚Äî –±–∞–π—Ç–∫–æ–¥ Python (–æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º–∞—Ç)
           #*.pyo ‚Äî –±–∞–π—Ç–∫–æ–¥ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏ (—É—Å—Ç–∞—Ä–µ–ª–æ, –Ω–æ –∏–Ω–æ–≥–¥–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è)
           #*.pyd ‚Äî –±–∏–Ω–∞—Ä–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è Windows (–ø–æ —Å—É—Ç–∏ DLL)

# üì¶ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–Ω–æ–≥–¥–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç Python
*$py.class          # –†–µ–¥–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –º–æ–∂–µ—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–±–æ—Ä–∫–∞—Ö (–∏–Ω–∞—á–µ –ª–∏—à–Ω–∏–µ —Ñ–∞–π–ª—ã –≤ Git)

# üß† –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ PyCharm
.idea/              # PyCharm —Ö—Ä–∞–Ω–∏—Ç —Ç—É—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ (–∏–Ω–∞—á–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–µ–∂–¥—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏)

# üß† –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã JetBrains
*.iml               # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–æ–¥—É–ª–µ–π PyCharm/IntelliJ (–∏–Ω–∞—á–µ –±—É–¥—É—Ç –ø–æ–ø–∞–¥–∞—Ç—å –≤ –∫–æ–º–º–∏—Ç—ã)

# üß™ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ Python
venv/               # –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏ (–∏–Ω–∞—á–µ —Å–ª—É—á–∞–π–Ω–æ v–º–æ–∂–Ω–æ –∑–∞–ª–∏—Ç—å –º–Ω–æ–≥–æ –ª–∏—à–Ω–µ–≥–æ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)

# üîê –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
.env                # –§–∞–π–ª —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏ (–∏–Ω–∞—á–µ –º–æ–∂–Ω–æ —Å–ª—É—á–∞–π–Ω–æ —Å–ª–∏—Ç—å –ø–∞—Ä–æ–ª–∏, –∫–ª—é—á–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
*.env               # –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–∞ —Å–ª—É—á–∞–π –¥—Ä—É–≥–∏—Ö .env-—Ñ–∞–π–ª–æ–≤ (.env.prod, .env.dev –∏ —Ç.–ø.)

# üçé –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –º–µ—Ç–∞-—Ñ–∞–π–ª macOS
.DS_Store           # –°–æ–∑–¥–∞—ë—Ç—Å—è –Ω–∞ Mac –≤ –∫–∞–∂–¥–æ–π –ø–∞–ø–∫–µ (–∏–Ω–∞—á–µ –±—É–¥–µ—Ç –º–µ—à–∞—Ç—å—Å—è, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Mac)

# ü™ü –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ñ–∞–π–ª Windows
Thumbs.db           # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç—Å—è Windows (–∏–Ω–∞—á–µ –ø–æ–ø–∞–¥—ë—Ç –≤ —Ä–µ–ø—É, –µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å Win)

# üìù –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ª–æ–≥–∏ –∏ PID-—Ñ–∞–π–ª—ã
*.log               # –õ–æ–≥-—Ñ–∞–π–ª—ã ‚Äî –≤—Ä–µ–º–µ–Ω–Ω—ã–µ (–∏–Ω–∞—á–µ –º–æ–∂–Ω–æ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –ª–æ–≥–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞)
*.pid               # –•—Ä–∞–Ω—è—Ç ID –ø—Ä–æ—Ü–µ—Å—Å–∞ ‚Äî —Ç–æ–∂–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ (–∏–Ω–∞—á–µ –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã –≤ Git)

# üóÉÔ∏è –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ë–î SQLite
*.sqlite3           # –ï—Å–ª–∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è SQLite –¥–ª—è —Ç–µ—Å—Ç–∞ (–∏–Ω–∞—á–µ –∑–∞–ª—å—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ)
*.db                # –û–±—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ –Ω–∞ —Å–ª—É—á–∞–π –¥—Ä—É–≥–∏—Ö –ë–î-—Ñ–∞–π–ª–æ–≤

# üí° –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º swap-—Ñ–∞–π–ª—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤
*.swp               # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Vim –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ (–∏–Ω–∞—á–µ –ø–æ–ø–∞–¥—É—Ç —Å–ª—É—á–∞–π–Ω–æ –≤ –∫–æ–º–º–∏—Ç)
*.swo               # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ ‚Äî –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—Å–∫–∏–µ —Ñ–∞–π–ª—ã

# üîô –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
*~                  # –°–æ–∑–¥–∞—é—Ç—Å—è –ø—Ä–∏ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–ª–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ (–∏–Ω–∞—á–µ –±—É–¥–µ—Ç –º—É—Å–æ—Ä)

# üß™ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞
.coverage           # –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏ (–∏–Ω–∞—á–µ –ª–∏—à–Ω–∏–µ —Ç–µ—Å—Ç-–æ—Ç—á—ë—Ç—ã –≤ Git)
htmlcov/            # –ü–∞–ø–∫–∞ —Å html-–æ—Ç—á—ë—Ç–∞–º–∏ –ø–æ–∫—Ä—ã—Ç–∏—è (–∏–Ω–∞—á–µ –ª–∏—à–Ω–∏–π –≤–µ—Å)
.cache/             # –ö—ç—à pytest/coverage (–∏–Ω–∞—á–µ –ª–∏—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Ç–µ—Å—Ç–æ–≤)
.tox/               # tox ‚Äî —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ä–µ–¥–∞—Ö (–∏–Ω–∞—á–µ –Ω–µ–Ω—É–∂–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã)
pytest_cache/       # –ö—ç—à pytest ‚Äî —á—Ç–æ–±—ã —Ç–µ—Å—Ç—ã —à–ª–∏ –±—ã—Å—Ç—Ä–µ–µ (–∏–Ω–∞—á–µ –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ –≤ Git)

# üì¶ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
node_modules/       # –ï—Å–ª–∏ –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω NPM (–∏–Ω–∞—á–µ > 1000 —Ñ–∞–π–ª–æ–≤ –º–æ–∂–µ—Ç –ø–æ–ø–∞—Å—Ç—å –≤ Git)

# üìÇ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–ª–∏ —Å–ª—É–∂–µ–±–Ω—ã–µ –ø–∞–ø–∫–∏ (–µ—Å–ª–∏ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è)
uploads/            # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç —Ñ–∞–π–ª—ã (–∏–Ω–∞—á–µ –º–æ–∂–Ω–æ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å —á—É–∂–∏–µ –¥–∞–Ω–Ω—ã–µ)
tmp/                # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –∫–µ—à–∏, –æ—Ç—á—ë—Ç—ã (–∏–Ω–∞—á–µ –æ–Ω–∏ –±—É–¥—É—Ç —Å–±–∏–≤–∞—Ç—å —Ä–µ–≤–∏–∑–∏–∏)
